{"ast":null,"code":"var _jsxFileName = \"/home/bekzodjon/Desktop/todos/src/components/App/App.js\";\nimport React from \"react\";\nimport AppHeader from \"../AppHeader\";\nimport SearchPanel from \"../SearchPanel\";\nimport TodoList from \"../TodoList\";\nimport ItemAddForm from \"../ItemAddForm\";\nimport ItemStatusFilter from \"../ItemStatusFilter\";\nimport img1 from \"./images/bluesky.jpg\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.counter = 100;\n    this.state = {\n      todoData: [{\n        label: \"Drink Coffee\",\n        important: false,\n        id: 1\n      }, {\n        label: \"Build React App\",\n        important: false,\n        id: 2\n      }, {\n        label: \"Have a lunch\",\n        important: true,\n        id: 3\n      }]\n    };\n\n    this.deleteItem = id => {\n      this.setState(({\n        todoData\n      }) => {\n        //find index of deleted item\n        const idx = todoData.findIndex(el => el.id === id); // slicing only needed parts, without id\n\n        const before = todoData.slice(0, idx);\n        const after = todoData.slice(idx + 1); // create new array\n\n        const newTodoData = [...before, ...after]; // setting newTodoData as a new state \n\n        return {\n          todoData: newTodoData\n        };\n      });\n    };\n\n    this.addItem = text => {\n      const newItem = {\n        label: text,\n        important: false,\n        id: this.counter++\n      };\n      this.setState(({\n        todoData\n      }) => {\n        const newTodoData = [...todoData, newItem];\n        return {\n          todoData: newTodoData\n        };\n      });\n    };\n\n    this.toggleDone = id => {\n      console.log(\"Done\", id);\n    };\n\n    this.toggleImportant = id => {\n      console.log(\"Important\", id);\n    };\n  }\n\n  createTodoItem(label) {\n    return {\n      label: text,\n      important: false,\n      done: false,\n      id: this.counter++\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"wrap\",\n      style: {\n        background: \"url(\".concat(img1, \")\"),\n        backgroundSize: 'cover'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"todo-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(AppHeader, {\n      todo: 1,\n      done: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"top-panel d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(SearchPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(ItemStatusFilter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(TodoList, {\n      todos: this.state.todoData,\n      onDeleted: this.deleteItem,\n      toggleDone: this.toggleDone,\n      toggleImportant: this.toggleImportant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(ItemAddForm, {\n      onItemAdded: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/home/bekzodjon/Desktop/todos/src/components/App/App.js"],"names":["React","AppHeader","SearchPanel","TodoList","ItemAddForm","ItemStatusFilter","img1","App","Component","counter","state","todoData","label","important","id","deleteItem","setState","idx","findIndex","el","before","slice","after","newTodoData","addItem","text","newItem","toggleDone","console","log","toggleImportant","createTodoItem","done","render","background","backgroundSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AAEA,OAAO,WAAP;;AAGA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC/BC,OAD+B,GACrB,GADqB;AAAA,SAE9BC,KAF8B,GAEtB;AACPC,MAAAA,QAAQ,EAAG,CACT;AAAEC,QAAAA,KAAK,EAAE,cAAT;AAAyBC,QAAAA,SAAS,EAAE,KAApC;AAA2CC,QAAAA,EAAE,EAAE;AAA/C,OADS,EAET;AAAEF,QAAAA,KAAK,EAAE,iBAAT;AAA4BC,QAAAA,SAAS,EAAE,KAAvC;AAA8CC,QAAAA,EAAE,EAAE;AAAlD,OAFS,EAGT;AAAEF,QAAAA,KAAK,EAAE,cAAT;AAAyBC,QAAAA,SAAS,EAAE,IAApC;AAA0CC,QAAAA,EAAE,EAAE;AAA9C,OAHS;AADJ,KAFsB;;AAAA,SAiB9BC,UAjB8B,GAiBhBD,EAAD,IAAO;AAClB,WAAKE,QAAL,CAAc,CAAC;AAACL,QAAAA;AAAD,OAAD,KAAc;AAEzB;AACA,cAAMM,GAAG,GAAGN,QAAQ,CAACO,SAAT,CAAmBC,EAAE,IAAGA,EAAE,CAACL,EAAH,KAAUA,EAAlC,CAAZ,CAHyB,CAKzB;;AACA,cAAMM,MAAM,GAAGT,QAAQ,CAACU,KAAT,CAAe,CAAf,EAAkBJ,GAAlB,CAAf;AACA,cAAMK,KAAK,GAAGX,QAAQ,CAACU,KAAT,CAAeJ,GAAG,GAAC,CAAnB,CAAd,CAPyB,CASzB;;AACA,cAAMM,WAAW,GAAG,CAAC,GAAGH,MAAJ,EAAY,GAAGE,KAAf,CAApB,CAVyB,CAYzB;;AACA,eAAM;AACJX,UAAAA,QAAQ,EAAEY;AADN,SAAN;AAGF,OAhBD;AAkBD,KApC6B;;AAAA,SAsC9BC,OAtC8B,GAsCnBC,IAAD,IAAS;AAChB,YAAMC,OAAO,GAAG;AACdd,QAAAA,KAAK,EAAEa,IADO;AAEdZ,QAAAA,SAAS,EAAE,KAFG;AAGdC,QAAAA,EAAE,EAAE,KAAKL,OAAL;AAHU,OAAhB;AAMA,WAAKO,QAAL,CAAc,CAAC;AAACL,QAAAA;AAAD,OAAD,KAAc;AACxB,cAAMY,WAAW,GAAG,CAChB,GAAGZ,QADa,EAEhBe,OAFgB,CAApB;AAKA,eAAM;AACFf,UAAAA,QAAQ,EAAEY;AADR,SAAN;AAGH,OATD;AAUF,KAvD6B;;AAAA,SAyD9BI,UAzD8B,GAyDhBb,EAAD,IAAO;AACjBc,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBf,EAApB;AACF,KA3D6B;;AAAA,SA6D9BgB,eA7D8B,GA6DXhB,EAAD,IAAO;AACxBc,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBf,EAAzB;AACA,KA/D6B;AAAA;;AAS9BiB,EAAAA,cAAc,CAACnB,KAAD,EAAO;AAClB,WAAM;AACJA,MAAAA,KAAK,EAAEa,IADH;AAEJZ,MAAAA,SAAS,EAAE,KAFP;AAGJmB,MAAAA,IAAI,EAAE,KAHF;AAIJlB,MAAAA,EAAE,EAAE,KAAKL,OAAL;AAJA,KAAN;AAMF;;AAgDDwB,EAAAA,MAAM,GAAE;AACP,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,gBAAS5B,IAAT,MAAX;AAA6B6B,QAAAA,cAAc,EAAE;AAA7C,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE,CAAjB;AAAoB,MAAA,IAAI,EAAE,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAGA;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAHA,EAQA,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWC,QAA5B;AAAsC,MAAA,SAAS,EAAE,KAAKI,UAAtD;AACA,MAAA,UAAU,EAAE,KAAKY,UADjB;AAC6B,MAAA,eAAe,EAAE,KAAKG,eADnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARA,EAUA,oBAAC,WAAD;AAAa,MAAA,WAAW,EAAE,KAAKN,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVA,CADJ,CADF;AAgBA;;AAjF6B;;AAkFhC;AAED,eAAejB,GAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport AppHeader from \"../AppHeader\";\r\nimport SearchPanel from \"../SearchPanel\";\r\nimport TodoList from \"../TodoList\";\r\nimport ItemAddForm from \"../ItemAddForm\";\r\n\r\nimport ItemStatusFilter from \"../ItemStatusFilter\";\r\nimport img1 from \"./images/bluesky.jpg\";\r\n\r\nimport \"./App.css\";\r\n\r\n\r\nclass App extends React.Component{\r\n  counter = 100;\r\n   state = {\r\n    todoData : [\r\n      { label: \"Drink Coffee\", important: false, id: 1 },\r\n      { label: \"Build React App\", important: false, id: 2 },\r\n      { label: \"Have a lunch\", important: true, id: 3 }\r\n    ],\r\n   }\r\n   createTodoItem(label){\r\n      return{\r\n        label: text,\r\n        important: false,\r\n        done: false,\r\n        id: this.counter++,\r\n      }\r\n   }\r\n   deleteItem = (id) =>{\r\n     this.setState(({todoData})=>{\r\n\r\n        //find index of deleted item\r\n        const idx = todoData.findIndex(el=> el.id === id);\r\n\r\n        // slicing only needed parts, without id\r\n        const before = todoData.slice(0, idx);\r\n        const after = todoData.slice(idx+1);\r\n\r\n        // create new array\r\n        const newTodoData = [...before, ...after];\r\n\r\n        // setting newTodoData as a new state \r\n        return{\r\n          todoData: newTodoData \r\n        }\r\n     });\r\n       \r\n   }\r\n\r\n   addItem = (text) =>{\r\n      const newItem = {\r\n        label: text,\r\n        important: false,\r\n        id: this.counter++,\r\n      }\r\n      \r\n      this.setState(({todoData})=>{\r\n          const newTodoData = [\r\n              ...todoData,\r\n              newItem\r\n          ];\r\n\r\n          return{\r\n              todoData: newTodoData\r\n          }\r\n      });\r\n   }\r\n\r\n   toggleDone = (id) =>{\r\n      console.log(\"Done\", id);\r\n   }\r\n\r\n   toggleImportant = (id) =>{\r\n    console.log(\"Important\", id);\r\n   }\r\n   render(){\r\n    return (\r\n      <div className=\"wrap\" style={{background: `url(${img1})`, backgroundSize: 'cover'}}>\r\n          <div className=\"todo-app\">\r\n          <AppHeader todo={1} done={3}/>\r\n    \r\n          <div className=\"top-panel d-flex\">\r\n            <SearchPanel />\r\n            <ItemStatusFilter />\r\n          </div>\r\n    \r\n          <TodoList todos={this.state.todoData} onDeleted={this.deleteItem}\r\n          toggleDone={this.toggleDone} toggleImportant={this.toggleImportant} />\r\n          <ItemAddForm onItemAdded={this.addItem}/>\r\n      </div>       \r\n      </div>\r\n    );\r\n   }\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}