{"ast":null,"code":"import _objectSpread from \"/home/bekzodjon/Desktop/todos/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/bekzodjon/Desktop/todos/src/components/App/App.js\";\nimport React from \"react\";\nimport AppHeader from \"../AppHeader\";\nimport SearchPanel from \"../SearchPanel\";\nimport TodoList from \"../TodoList\";\nimport ItemAddForm from \"../ItemAddForm\";\nimport ItemStatusFilter from \"../ItemStatusFilter\";\nimport img1 from \"./images/bluesky.jpg\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.counter = 100;\n    this.state = {\n      todoData: [this.createTodoItem(\"Drink a coffee\"), this.createTodoItem(\"Build a React App\"), this.createTodoItem(\"Have a dinner\")]\n    };\n\n    this.deleteItem = id => {\n      this.setState(({\n        todoData\n      }) => {\n        //find index of deleted item\n        const idx = todoData.findIndex(el => el.id === id); // slicing only needed parts, without id\n\n        const before = todoData.slice(0, idx);\n        const after = todoData.slice(idx + 1); // create new array\n\n        const newTodoData = [...before, ...after]; // setting newTodoData as a new state \n\n        return {\n          todoData: newTodoData\n        };\n      });\n    };\n\n    this.addItem = text => {\n      const newItem = this.createTodoItem(text);\n      this.setState(({\n        todoData\n      }) => {\n        const newTodoData = [...todoData, newItem];\n        return {\n          todoData: newTodoData\n        };\n      });\n    };\n\n    this.toggleDone = id => {\n      this.setState(({\n        todoData\n      }) => {\n        // 1. Updating, creating new object using old array object\n        // getting array-id of checked element\n        const idx = todoData.findIndex(el => el.id === id);\n        const oldItem = todoData[idx];\n\n        const newItem = _objectSpread({}, oldItem, {\n          done: !oldItem.done\n        }); // 2. Creating updated array of items\n\n\n        const newArr = [...todoData.slice(0, idx), newItem, ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.toggleImportant = id => {\n      console.log(\"Important\", id);\n    };\n  }\n\n  createTodoItem(label) {\n    return {\n      label,\n      important: false,\n      done: false,\n      id: this.counter++\n    };\n  }\n\n  render() {\n    const doneCount = this.state.todoData.filter(el => el.done).length;\n    const todoCount = this.state.todoData.length - doneCount;\n    return React.createElement(\"div\", {\n      className: \"wrap\",\n      style: {\n        background: \"url(\".concat(img1, \")\"),\n        backgroundSize: 'cover'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"todo-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(AppHeader, {\n      todo: doneCount,\n      done: todoCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"top-panel d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(SearchPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(ItemStatusFilter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(TodoList, {\n      todos: this.state.todoData,\n      onDeleted: this.deleteItem,\n      toggleDone: this.toggleDone,\n      toggleImportant: this.toggleImportant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(ItemAddForm, {\n      onItemAdded: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/home/bekzodjon/Desktop/todos/src/components/App/App.js"],"names":["React","AppHeader","SearchPanel","TodoList","ItemAddForm","ItemStatusFilter","img1","App","Component","counter","state","todoData","createTodoItem","deleteItem","id","setState","idx","findIndex","el","before","slice","after","newTodoData","addItem","text","newItem","toggleDone","oldItem","done","newArr","toggleImportant","console","log","label","important","render","doneCount","filter","length","todoCount","background","backgroundSize"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport AppHeader from \"../AppHeader\";\r\nimport SearchPanel from \"../SearchPanel\";\r\nimport TodoList from \"../TodoList\";\r\nimport ItemAddForm from \"../ItemAddForm\";\r\n\r\nimport ItemStatusFilter from \"../ItemStatusFilter\";\r\nimport img1 from \"./images/bluesky.jpg\";\r\n\r\nimport \"./App.css\";\r\n\r\n\r\nclass App extends React.Component{\r\n  counter = 100;\r\n   state = {\r\n    todoData : [\r\n        this.createTodoItem(\"Drink a coffee\"),\r\n        this.createTodoItem(\"Build a React App\"),\r\n        this.createTodoItem(\"Have a dinner\"),\r\n    ],\r\n   }\r\n   createTodoItem(label){\r\n      return{\r\n        label,\r\n        important: false,\r\n        done: false,\r\n        id: this.counter++,\r\n      }\r\n   }\r\n   deleteItem = (id) =>{\r\n     this.setState(({todoData})=>{\r\n\r\n        //find index of deleted item\r\n        const idx = todoData.findIndex(el=> el.id === id);\r\n\r\n        // slicing only needed parts, without id\r\n        const before = todoData.slice(0, idx);\r\n        const after = todoData.slice(idx+1);\r\n\r\n        // create new array\r\n        const newTodoData = [...before, ...after];\r\n\r\n        // setting newTodoData as a new state \r\n        return{\r\n          todoData: newTodoData \r\n        }\r\n     });\r\n       \r\n   }\r\n\r\n   addItem = (text) =>{\r\n      const newItem = this.createTodoItem(text);\r\n      \r\n      this.setState(({todoData})=>{\r\n          const newTodoData = [\r\n              ...todoData,\r\n              newItem\r\n          ];\r\n\r\n          return{\r\n              todoData: newTodoData\r\n          }\r\n      });\r\n   }\r\n\r\n   toggleDone = (id) =>{\r\n      this.setState(({todoData})=>{\r\n          // 1. Updating, creating new object using old array object\r\n          // getting array-id of checked element\r\n          const idx = todoData.findIndex(el=> el.id===id);\r\n          \r\n          const oldItem = todoData[idx];\r\n          const newItem = {...oldItem, done: !oldItem.done};\r\n\r\n          // 2. Creating updated array of items\r\n          const newArr = [\r\n              ...todoData.slice(0, idx),\r\n              newItem,\r\n              ...todoData.slice(idx+1)\r\n          ];\r\n\r\n          return{\r\n              todoData: newArr\r\n          }\r\n      })\r\n   }\r\n\r\n   toggleImportant = (id) =>{\r\n    console.log(\"Important\", id);\r\n   }\r\n   render(){\r\n\r\n    const doneCount = this.state.todoData.filter(el => el.done).length;\r\n    const todoCount = this.state.todoData.length - doneCount;\r\n\r\n    return (\r\n      <div className=\"wrap\" style={{background: `url(${img1})`, backgroundSize: 'cover'}}>\r\n          <div className=\"todo-app\">\r\n          <AppHeader todo={doneCount} done={todoCount}/>\r\n    \r\n          <div className=\"top-panel d-flex\">\r\n            <SearchPanel />\r\n            <ItemStatusFilter />\r\n          </div>\r\n    \r\n          <TodoList todos={this.state.todoData} onDeleted={this.deleteItem}\r\n          toggleDone={this.toggleDone} toggleImportant={this.toggleImportant} />\r\n          <ItemAddForm onItemAdded={this.addItem}/>\r\n      </div>       \r\n      </div>\r\n    );\r\n   }\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}